//
// Avatar はアバターに関する情報を操作します。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: core/avatar.proto

package core

import (
	common "github.com/SpiralMindJP/at-sdk/go/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// アバター情報リスト取得リクエストを表します。
type GetAvatarsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	UsedOnly bool  `protobuf:"varint,2,opt,name=used_only,json=usedOnly,proto3" json:"used_only,omitempty"` // true を指定すると、Operator デバイスに設定されているアバターのみ取得します。
}

func (x *GetAvatarsRequest) Reset() {
	*x = GetAvatarsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarsRequest) ProtoMessage() {}

func (x *GetAvatarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarsRequest.ProtoReflect.Descriptor instead.
func (*GetAvatarsRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{0}
}

func (x *GetAvatarsRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetAvatarsRequest) GetUsedOnly() bool {
	if x != nil {
		return x.UsedOnly
	}
	return false
}

// アバター情報リスト取得レスポンスを表します。
type GetAvatarsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatars []*common.Avatar `protobuf:"bytes,1,rep,name=avatars,proto3" json:"avatars,omitempty"` // アバターのリスト。
}

func (x *GetAvatarsResponse) Reset() {
	*x = GetAvatarsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarsResponse) ProtoMessage() {}

func (x *GetAvatarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarsResponse.ProtoReflect.Descriptor instead.
func (*GetAvatarsResponse) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{1}
}

func (x *GetAvatarsResponse) GetAvatars() []*common.Avatar {
	if x != nil {
		return x.Avatars
	}
	return nil
}

// アバター情報取得リクエストを表します。
type GetAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	AvatarId int64 `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"` // アバターID。
}

func (x *GetAvatarRequest) Reset() {
	*x = GetAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarRequest) ProtoMessage() {}

func (x *GetAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarRequest.ProtoReflect.Descriptor instead.
func (*GetAvatarRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{2}
}

func (x *GetAvatarRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetAvatarRequest) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

// アバター情報取得レスポンスを表します。
type GetAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar *common.Avatar `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"` // アバター情報。
}

func (x *GetAvatarResponse) Reset() {
	*x = GetAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarResponse) ProtoMessage() {}

func (x *GetAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarResponse.ProtoReflect.Descriptor instead.
func (*GetAvatarResponse) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{3}
}

func (x *GetAvatarResponse) GetAvatar() *common.Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

// アバター作成リクエストを表します。
type CreateAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId         int64               `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                              // チームID。
	Name           string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                 // アバター名称。
	ContentId      int64               `protobuf:"varint,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                     // アバターのコンテンツID。
	CameraPosition *common.Vector3     `protobuf:"bytes,4,opt,name=camera_position,json=cameraPosition,proto3,oneof" json:"camera_position,omitempty"` // カメラの位置。
	CameraRotation *common.Vector3     `protobuf:"bytes,5,opt,name=camera_rotation,json=cameraRotation,proto3,oneof" json:"camera_rotation,omitempty"` // カメラの回転。
	CameraFov      *float64            `protobuf:"fixed64,6,opt,name=camera_fov,json=cameraFov,proto3,oneof" json:"camera_fov,omitempty"`              // カメラの画角。
	Animations     []*common.Animation `protobuf:"bytes,10,rep,name=animations,proto3" json:"animations,omitempty"`                                    // アニメーションのリスト。
}

func (x *CreateAvatarRequest) Reset() {
	*x = CreateAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAvatarRequest) ProtoMessage() {}

func (x *CreateAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAvatarRequest.ProtoReflect.Descriptor instead.
func (*CreateAvatarRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAvatarRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *CreateAvatarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAvatarRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *CreateAvatarRequest) GetCameraPosition() *common.Vector3 {
	if x != nil {
		return x.CameraPosition
	}
	return nil
}

func (x *CreateAvatarRequest) GetCameraRotation() *common.Vector3 {
	if x != nil {
		return x.CameraRotation
	}
	return nil
}

func (x *CreateAvatarRequest) GetCameraFov() float64 {
	if x != nil && x.CameraFov != nil {
		return *x.CameraFov
	}
	return 0
}

func (x *CreateAvatarRequest) GetAnimations() []*common.Animation {
	if x != nil {
		return x.Animations
	}
	return nil
}

// アバター作成リクエストを表します。
type CreateAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar *common.Avatar `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"` // アバター情報。
}

func (x *CreateAvatarResponse) Reset() {
	*x = CreateAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAvatarResponse) ProtoMessage() {}

func (x *CreateAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAvatarResponse.ProtoReflect.Descriptor instead.
func (*CreateAvatarResponse) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAvatarResponse) GetAvatar() *common.Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

// アバター更新リクエストを表します。
type UpdateAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId         int64               `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                              // チームID。
	AvatarId       int64               `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`                        // アバターID。
	Name           string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                 // アバター名称。
	ContentId      int64               `protobuf:"varint,4,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                     // アバターのコンテンツID。
	CameraPosition *common.Vector3     `protobuf:"bytes,5,opt,name=camera_position,json=cameraPosition,proto3,oneof" json:"camera_position,omitempty"` // カメラの位置。
	CameraRotation *common.Vector3     `protobuf:"bytes,6,opt,name=camera_rotation,json=cameraRotation,proto3,oneof" json:"camera_rotation,omitempty"` // カメラの回転。
	CameraFov      *float64            `protobuf:"fixed64,7,opt,name=camera_fov,json=cameraFov,proto3,oneof" json:"camera_fov,omitempty"`              // カメラの画角。
	Animations     []*common.Animation `protobuf:"bytes,10,rep,name=animations,proto3" json:"animations,omitempty"`                                    // アニメーションのリスト。
}

func (x *UpdateAvatarRequest) Reset() {
	*x = UpdateAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarRequest) ProtoMessage() {}

func (x *UpdateAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarRequest.ProtoReflect.Descriptor instead.
func (*UpdateAvatarRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAvatarRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UpdateAvatarRequest) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *UpdateAvatarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAvatarRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *UpdateAvatarRequest) GetCameraPosition() *common.Vector3 {
	if x != nil {
		return x.CameraPosition
	}
	return nil
}

func (x *UpdateAvatarRequest) GetCameraRotation() *common.Vector3 {
	if x != nil {
		return x.CameraRotation
	}
	return nil
}

func (x *UpdateAvatarRequest) GetCameraFov() float64 {
	if x != nil && x.CameraFov != nil {
		return *x.CameraFov
	}
	return 0
}

func (x *UpdateAvatarRequest) GetAnimations() []*common.Animation {
	if x != nil {
		return x.Animations
	}
	return nil
}

// アバター更新リクエストを表します。
type UpdateAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar *common.Avatar `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"` // アバター情報。
}

func (x *UpdateAvatarResponse) Reset() {
	*x = UpdateAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarResponse) ProtoMessage() {}

func (x *UpdateAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarResponse.ProtoReflect.Descriptor instead.
func (*UpdateAvatarResponse) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAvatarResponse) GetAvatar() *common.Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

// アバター削除リクエストを表します。
type DeleteAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	AvatarId int64 `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"` // アバターID。
}

func (x *DeleteAvatarRequest) Reset() {
	*x = DeleteAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAvatarRequest) ProtoMessage() {}

func (x *DeleteAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAvatarRequest.ProtoReflect.Descriptor instead.
func (*DeleteAvatarRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAvatarRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *DeleteAvatarRequest) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

// オペレーターアバター取得リクエストを表します。
type GetOperatorAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	DeviceId int64 `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // オペレーターデバイスのデバイスID。
}

func (x *GetOperatorAvatarRequest) Reset() {
	*x = GetOperatorAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperatorAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorAvatarRequest) ProtoMessage() {}

func (x *GetOperatorAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorAvatarRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorAvatarRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{9}
}

func (x *GetOperatorAvatarRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetOperatorAvatarRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

// オペレーターアバター取得レスポンスを表します。
type GetOperatorAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64          `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	DeviceId int64          `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // オペレーターデバイスのデバイスID。
	Avatar   *common.Avatar `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                      // アバター情報。
}

func (x *GetOperatorAvatarResponse) Reset() {
	*x = GetOperatorAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperatorAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorAvatarResponse) ProtoMessage() {}

func (x *GetOperatorAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorAvatarResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorAvatarResponse) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{10}
}

func (x *GetOperatorAvatarResponse) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetOperatorAvatarResponse) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *GetOperatorAvatarResponse) GetAvatar() *common.Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

// オペレーターデバイスへのアバター設定リクエストを表します。
type SetOperatorAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	DeviceId int64 `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // オペレーターデバイスのデバイスID。
	AvatarId int64 `protobuf:"varint,3,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"` // アバターID。
}

func (x *SetOperatorAvatarRequest) Reset() {
	*x = SetOperatorAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOperatorAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOperatorAvatarRequest) ProtoMessage() {}

func (x *SetOperatorAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOperatorAvatarRequest.ProtoReflect.Descriptor instead.
func (*SetOperatorAvatarRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{11}
}

func (x *SetOperatorAvatarRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *SetOperatorAvatarRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *SetOperatorAvatarRequest) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

// オペレーターデバイスへのアバター設定レスポンスを表します。
type SetOperatorAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64          `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	DeviceId int64          `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // オペレーターデバイスのデバイスID。
	Avatar   *common.Avatar `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                      // アバター情報。
}

func (x *SetOperatorAvatarResponse) Reset() {
	*x = SetOperatorAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOperatorAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOperatorAvatarResponse) ProtoMessage() {}

func (x *SetOperatorAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOperatorAvatarResponse.ProtoReflect.Descriptor instead.
func (*SetOperatorAvatarResponse) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{12}
}

func (x *SetOperatorAvatarResponse) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *SetOperatorAvatarResponse) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *SetOperatorAvatarResponse) GetAvatar() *common.Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

// オペレーターデバイスからのアバター削除レスポンスを表します。
type DeleteOperatorAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`       // チームID。
	DeviceId int64 `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // オペレーターデバイスのデバイスID。
}

func (x *DeleteOperatorAvatarRequest) Reset() {
	*x = DeleteOperatorAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_avatar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOperatorAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOperatorAvatarRequest) ProtoMessage() {}

func (x *DeleteOperatorAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_avatar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOperatorAvatarRequest.ProtoReflect.Descriptor instead.
func (*DeleteOperatorAvatarRequest) Descriptor() ([]byte, []int) {
	return file_core_avatar_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteOperatorAvatarRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *DeleteOperatorAvatarRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

var File_core_avatar_proto protoreflect.FileDescriptor

var file_core_avatar_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x22, 0x48, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xf6, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0f,
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x48, 0x01, 0x52, 0x0e, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x66, 0x6f, 0x76, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x02, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x46, 0x6f, 0x76, 0x88,
	0x01, 0x01, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x66, 0x6f, 0x76, 0x22,
	0x41, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0x93, 0x03, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33,
	0x48, 0x00, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x33, 0x48, 0x01, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x5f, 0x66, 0x6f, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x09, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x46, 0x6f, 0x76, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0a, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x66, 0x6f, 0x76, 0x22, 0x41, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x4b, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x6d, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x53, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x32, 0x88, 0x05, 0x0a, 0x0d, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x19, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x1c, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x21, 0x2e, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x21, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70, 0x69, 0x72, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x64, 0x4a, 0x50,
	0x2f, 0x61, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_avatar_proto_rawDescOnce sync.Once
	file_core_avatar_proto_rawDescData = file_core_avatar_proto_rawDesc
)

func file_core_avatar_proto_rawDescGZIP() []byte {
	file_core_avatar_proto_rawDescOnce.Do(func() {
		file_core_avatar_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_avatar_proto_rawDescData)
	})
	return file_core_avatar_proto_rawDescData
}

var file_core_avatar_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_core_avatar_proto_goTypes = []interface{}{
	(*GetAvatarsRequest)(nil),           // 0: at.core.GetAvatarsRequest
	(*GetAvatarsResponse)(nil),          // 1: at.core.GetAvatarsResponse
	(*GetAvatarRequest)(nil),            // 2: at.core.GetAvatarRequest
	(*GetAvatarResponse)(nil),           // 3: at.core.GetAvatarResponse
	(*CreateAvatarRequest)(nil),         // 4: at.core.CreateAvatarRequest
	(*CreateAvatarResponse)(nil),        // 5: at.core.CreateAvatarResponse
	(*UpdateAvatarRequest)(nil),         // 6: at.core.UpdateAvatarRequest
	(*UpdateAvatarResponse)(nil),        // 7: at.core.UpdateAvatarResponse
	(*DeleteAvatarRequest)(nil),         // 8: at.core.DeleteAvatarRequest
	(*GetOperatorAvatarRequest)(nil),    // 9: at.core.GetOperatorAvatarRequest
	(*GetOperatorAvatarResponse)(nil),   // 10: at.core.GetOperatorAvatarResponse
	(*SetOperatorAvatarRequest)(nil),    // 11: at.core.SetOperatorAvatarRequest
	(*SetOperatorAvatarResponse)(nil),   // 12: at.core.SetOperatorAvatarResponse
	(*DeleteOperatorAvatarRequest)(nil), // 13: at.core.DeleteOperatorAvatarRequest
	(*common.Avatar)(nil),               // 14: at.common.Avatar
	(*common.Vector3)(nil),              // 15: at.common.Vector3
	(*common.Animation)(nil),            // 16: at.common.Animation
	(*emptypb.Empty)(nil),               // 17: google.protobuf.Empty
}
var file_core_avatar_proto_depIdxs = []int32{
	14, // 0: at.core.GetAvatarsResponse.avatars:type_name -> at.common.Avatar
	14, // 1: at.core.GetAvatarResponse.avatar:type_name -> at.common.Avatar
	15, // 2: at.core.CreateAvatarRequest.camera_position:type_name -> at.common.Vector3
	15, // 3: at.core.CreateAvatarRequest.camera_rotation:type_name -> at.common.Vector3
	16, // 4: at.core.CreateAvatarRequest.animations:type_name -> at.common.Animation
	14, // 5: at.core.CreateAvatarResponse.avatar:type_name -> at.common.Avatar
	15, // 6: at.core.UpdateAvatarRequest.camera_position:type_name -> at.common.Vector3
	15, // 7: at.core.UpdateAvatarRequest.camera_rotation:type_name -> at.common.Vector3
	16, // 8: at.core.UpdateAvatarRequest.animations:type_name -> at.common.Animation
	14, // 9: at.core.UpdateAvatarResponse.avatar:type_name -> at.common.Avatar
	14, // 10: at.core.GetOperatorAvatarResponse.avatar:type_name -> at.common.Avatar
	14, // 11: at.core.SetOperatorAvatarResponse.avatar:type_name -> at.common.Avatar
	0,  // 12: at.core.AvatarService.GetAvatars:input_type -> at.core.GetAvatarsRequest
	2,  // 13: at.core.AvatarService.GetAvatar:input_type -> at.core.GetAvatarRequest
	4,  // 14: at.core.AvatarService.CreateAvatar:input_type -> at.core.CreateAvatarRequest
	6,  // 15: at.core.AvatarService.UpdateAvatar:input_type -> at.core.UpdateAvatarRequest
	8,  // 16: at.core.AvatarService.DeleteAvatar:input_type -> at.core.DeleteAvatarRequest
	9,  // 17: at.core.AvatarService.GetOperatorAvatar:input_type -> at.core.GetOperatorAvatarRequest
	11, // 18: at.core.AvatarService.SetOperatorAvatar:input_type -> at.core.SetOperatorAvatarRequest
	13, // 19: at.core.AvatarService.DeleteOperatorAvatar:input_type -> at.core.DeleteOperatorAvatarRequest
	1,  // 20: at.core.AvatarService.GetAvatars:output_type -> at.core.GetAvatarsResponse
	3,  // 21: at.core.AvatarService.GetAvatar:output_type -> at.core.GetAvatarResponse
	5,  // 22: at.core.AvatarService.CreateAvatar:output_type -> at.core.CreateAvatarResponse
	7,  // 23: at.core.AvatarService.UpdateAvatar:output_type -> at.core.UpdateAvatarResponse
	17, // 24: at.core.AvatarService.DeleteAvatar:output_type -> google.protobuf.Empty
	10, // 25: at.core.AvatarService.GetOperatorAvatar:output_type -> at.core.GetOperatorAvatarResponse
	12, // 26: at.core.AvatarService.SetOperatorAvatar:output_type -> at.core.SetOperatorAvatarResponse
	17, // 27: at.core.AvatarService.DeleteOperatorAvatar:output_type -> google.protobuf.Empty
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_core_avatar_proto_init() }
func file_core_avatar_proto_init() {
	if File_core_avatar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_avatar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperatorAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperatorAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOperatorAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOperatorAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_avatar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOperatorAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_core_avatar_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_core_avatar_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_avatar_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_avatar_proto_goTypes,
		DependencyIndexes: file_core_avatar_proto_depIdxs,
		MessageInfos:      file_core_avatar_proto_msgTypes,
	}.Build()
	File_core_avatar_proto = out.File
	file_core_avatar_proto_rawDesc = nil
	file_core_avatar_proto_goTypes = nil
	file_core_avatar_proto_depIdxs = nil
}
