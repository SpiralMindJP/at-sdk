//
// Content はコンテンツに関する情報を操作します。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.26.1
// source: core/content.proto

package core

import (
	common "github.com/SpiralMindJP/at-sdk/go/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// コンテンツリストのリスト取得クエストを表します。
type GetContentListsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"` // チームID。
}

func (x *GetContentListsRequest) Reset() {
	*x = GetContentListsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentListsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentListsRequest) ProtoMessage() {}

func (x *GetContentListsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentListsRequest.ProtoReflect.Descriptor instead.
func (*GetContentListsRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{0}
}

func (x *GetContentListsRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

// コンテンツリストのリスト取得レスポンスを表します。
type GetContentListsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentLists []*common.ContentList `protobuf:"bytes,1,rep,name=content_lists,json=contentLists,proto3" json:"content_lists,omitempty"` // コンテンツリストのリスト。
}

func (x *GetContentListsResponse) Reset() {
	*x = GetContentListsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentListsResponse) ProtoMessage() {}

func (x *GetContentListsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentListsResponse.ProtoReflect.Descriptor instead.
func (*GetContentListsResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{1}
}

func (x *GetContentListsResponse) GetContentLists() []*common.ContentList {
	if x != nil {
		return x.ContentLists
	}
	return nil
}

// コンテンツリスト取得リクエストを表します。
type GetContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId        int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                        // チームID。
	ContentListId int64 `protobuf:"varint,2,opt,name=content_list_id,json=contentListId,proto3" json:"content_list_id,omitempty"` // コンテンツリストID。
}

func (x *GetContentListRequest) Reset() {
	*x = GetContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentListRequest) ProtoMessage() {}

func (x *GetContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentListRequest.ProtoReflect.Descriptor instead.
func (*GetContentListRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{2}
}

func (x *GetContentListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetContentListRequest) GetContentListId() int64 {
	if x != nil {
		return x.ContentListId
	}
	return 0
}

// コンテンツリスト取得レスポンスを表します。
type GetContentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentList *common.ContentList `protobuf:"bytes,1,opt,name=content_list,json=contentList,proto3" json:"content_list,omitempty"` // コンテンツリスト。
}

func (x *GetContentListResponse) Reset() {
	*x = GetContentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentListResponse) ProtoMessage() {}

func (x *GetContentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentListResponse.ProtoReflect.Descriptor instead.
func (*GetContentListResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{3}
}

func (x *GetContentListResponse) GetContentList() *common.ContentList {
	if x != nil {
		return x.ContentList
	}
	return nil
}

// コンテンツリスト作成リクエストを表します。
type CreateContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId int64  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"` // チームID。
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                    // コンテンツリスト名。
}

func (x *CreateContentListRequest) Reset() {
	*x = CreateContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentListRequest) ProtoMessage() {}

func (x *CreateContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentListRequest.ProtoReflect.Descriptor instead.
func (*CreateContentListRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{4}
}

func (x *CreateContentListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *CreateContentListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// コンテンツリスト作成レスポンスを表します。
type CreateContentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentList *common.ContentList `protobuf:"bytes,1,opt,name=content_list,json=contentList,proto3" json:"content_list,omitempty"` // コンテンツリスト。
}

func (x *CreateContentListResponse) Reset() {
	*x = CreateContentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentListResponse) ProtoMessage() {}

func (x *CreateContentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentListResponse.ProtoReflect.Descriptor instead.
func (*CreateContentListResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{5}
}

func (x *CreateContentListResponse) GetContentList() *common.ContentList {
	if x != nil {
		return x.ContentList
	}
	return nil
}

// コンテンツリスト更新リクエストを表します。
type UpdateContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId        int64  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                        // チームID。
	ContentListId int64  `protobuf:"varint,2,opt,name=content_list_id,json=contentListId,proto3" json:"content_list_id,omitempty"` // コンテンツリストID。
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                           // コンテンツリスト名。
}

func (x *UpdateContentListRequest) Reset() {
	*x = UpdateContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContentListRequest) ProtoMessage() {}

func (x *UpdateContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContentListRequest.ProtoReflect.Descriptor instead.
func (*UpdateContentListRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateContentListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UpdateContentListRequest) GetContentListId() int64 {
	if x != nil {
		return x.ContentListId
	}
	return 0
}

func (x *UpdateContentListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// コンテンツリスト更新レスポンスを表します。
type UpdateContentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentList *common.ContentList `protobuf:"bytes,1,opt,name=content_list,json=contentList,proto3" json:"content_list,omitempty"` // コンテンツリスト。
}

func (x *UpdateContentListResponse) Reset() {
	*x = UpdateContentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContentListResponse) ProtoMessage() {}

func (x *UpdateContentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContentListResponse.ProtoReflect.Descriptor instead.
func (*UpdateContentListResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateContentListResponse) GetContentList() *common.ContentList {
	if x != nil {
		return x.ContentList
	}
	return nil
}

// コンテンツリスト削除リクエストを表します。
type DeleteContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId        int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                        // チームID。
	ContentListId int64 `protobuf:"varint,2,opt,name=content_list_id,json=contentListId,proto3" json:"content_list_id,omitempty"` // コンテンツリストID。
}

func (x *DeleteContentListRequest) Reset() {
	*x = DeleteContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContentListRequest) ProtoMessage() {}

func (x *DeleteContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContentListRequest.ProtoReflect.Descriptor instead.
func (*DeleteContentListRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteContentListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *DeleteContentListRequest) GetContentListId() int64 {
	if x != nil {
		return x.ContentListId
	}
	return 0
}

// コンテンツリストへのコンテンツ追加リクエストを表します。
type AddContentToContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId        int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                        // チームID。
	ContentListId int64 `protobuf:"varint,2,opt,name=content_list_id,json=contentListId,proto3" json:"content_list_id,omitempty"` // コンテンツリストID。
	ContentId     int64 `protobuf:"varint,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`               // コンテンツID。
}

func (x *AddContentToContentListRequest) Reset() {
	*x = AddContentToContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContentToContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContentToContentListRequest) ProtoMessage() {}

func (x *AddContentToContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContentToContentListRequest.ProtoReflect.Descriptor instead.
func (*AddContentToContentListRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{9}
}

func (x *AddContentToContentListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *AddContentToContentListRequest) GetContentListId() int64 {
	if x != nil {
		return x.ContentListId
	}
	return 0
}

func (x *AddContentToContentListRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

// コンテンツリストからのコンテンツ削除リクエストを表します。
type RemoveContentFromContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId        int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                        // チームID。
	ContentListId int64 `protobuf:"varint,2,opt,name=content_list_id,json=contentListId,proto3" json:"content_list_id,omitempty"` // コンテンツリストID。
	ContentId     int64 `protobuf:"varint,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`               // コンテンツID。
}

func (x *RemoveContentFromContentListRequest) Reset() {
	*x = RemoveContentFromContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveContentFromContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContentFromContentListRequest) ProtoMessage() {}

func (x *RemoveContentFromContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContentFromContentListRequest.ProtoReflect.Descriptor instead.
func (*RemoveContentFromContentListRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveContentFromContentListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *RemoveContentFromContentListRequest) GetContentListId() int64 {
	if x != nil {
		return x.ContentListId
	}
	return 0
}

func (x *RemoveContentFromContentListRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

// コンテンツリスト内ののコンテンツ移動リクエストを表します。
type MoveContentInContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId        int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                        // チームID。
	ContentListId int64 `protobuf:"varint,2,opt,name=content_list_id,json=contentListId,proto3" json:"content_list_id,omitempty"` // コンテンツリストID。
	ContentId     int64 `protobuf:"varint,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`               // コンテンツID。
	Index         int32 `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`                                        // 移動先のインデックス。
}

func (x *MoveContentInContentListRequest) Reset() {
	*x = MoveContentInContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveContentInContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveContentInContentListRequest) ProtoMessage() {}

func (x *MoveContentInContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveContentInContentListRequest.ProtoReflect.Descriptor instead.
func (*MoveContentInContentListRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{11}
}

func (x *MoveContentInContentListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *MoveContentInContentListRequest) GetContentListId() int64 {
	if x != nil {
		return x.ContentListId
	}
	return 0
}

func (x *MoveContentInContentListRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *MoveContentInContentListRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// 全コンテンツリスト取得リクエストを表します。
type GetAllContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId       int64                `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                                                     // チームID。
	ContentTypes []common.ContentType `protobuf:"varint,2,rep,packed,name=content_types,json=contentTypes,proto3,enum=at.common.ContentType" json:"content_types,omitempty"` // コンテンツタイプのリスト。
}

func (x *GetAllContentsRequest) Reset() {
	*x = GetAllContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllContentsRequest) ProtoMessage() {}

func (x *GetAllContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllContentsRequest.ProtoReflect.Descriptor instead.
func (*GetAllContentsRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllContentsRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetAllContentsRequest) GetContentTypes() []common.ContentType {
	if x != nil {
		return x.ContentTypes
	}
	return nil
}

// コンテンツリスト取得レスポンスを表します。
type GetAllContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents []*common.Content `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"` // コンテンツのリスト。
}

func (x *GetAllContentsResponse) Reset() {
	*x = GetAllContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllContentsResponse) ProtoMessage() {}

func (x *GetAllContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllContentsResponse.ProtoReflect.Descriptor instead.
func (*GetAllContentsResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllContentsResponse) GetContents() []*common.Content {
	if x != nil {
		return x.Contents
	}
	return nil
}

// コンテンツリスト取得リクエストを表します。
type GetContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId        int64                `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                                                     // チームID。
	ContentListId int64                `protobuf:"varint,2,opt,name=content_list_id,json=contentListId,proto3" json:"content_list_id,omitempty"`                              // コンテンツリストID。
	ContentTypes  []common.ContentType `protobuf:"varint,3,rep,packed,name=content_types,json=contentTypes,proto3,enum=at.common.ContentType" json:"content_types,omitempty"` // コンテンツタイプのリスト。
}

func (x *GetContentsRequest) Reset() {
	*x = GetContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentsRequest) ProtoMessage() {}

func (x *GetContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentsRequest.ProtoReflect.Descriptor instead.
func (*GetContentsRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{14}
}

func (x *GetContentsRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetContentsRequest) GetContentListId() int64 {
	if x != nil {
		return x.ContentListId
	}
	return 0
}

func (x *GetContentsRequest) GetContentTypes() []common.ContentType {
	if x != nil {
		return x.ContentTypes
	}
	return nil
}

// コンテンツリスト取得レスポンスを表します。
type GetContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents []*common.Content `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"` // コンテンツのリスト。
}

func (x *GetContentsResponse) Reset() {
	*x = GetContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentsResponse) ProtoMessage() {}

func (x *GetContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentsResponse.ProtoReflect.Descriptor instead.
func (*GetContentsResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{15}
}

func (x *GetContentsResponse) GetContents() []*common.Content {
	if x != nil {
		return x.Contents
	}
	return nil
}

// コンテンツ取得リクエストを表します。
type GetContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // チームID。
	ContentId int64 `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // コンテンツID。
}

func (x *GetContentRequest) Reset() {
	*x = GetContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentRequest) ProtoMessage() {}

func (x *GetContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentRequest.ProtoReflect.Descriptor instead.
func (*GetContentRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{16}
}

func (x *GetContentRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetContentRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

// コンテンツ取得レスポンスを表します。
type GetContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *common.Content `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` // コンテンツ。
}

func (x *GetContentResponse) Reset() {
	*x = GetContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentResponse) ProtoMessage() {}

func (x *GetContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentResponse.ProtoReflect.Descriptor instead.
func (*GetContentResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{17}
}

func (x *GetContentResponse) GetContent() *common.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

// コンテンツアップロードリクエストを表します。
type UploadContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId      int64              `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                                           // チームID。
	Name        string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                              // コンテンツ名。
	ContentType common.ContentType `protobuf:"varint,3,opt,name=content_type,json=contentType,proto3,enum=at.common.ContentType" json:"content_type,omitempty"` // コンテンツタイプ。
	FileName    string             `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`                                      // コンテンツのファイル名。
}

func (x *UploadContentRequest) Reset() {
	*x = UploadContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadContentRequest) ProtoMessage() {}

func (x *UploadContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadContentRequest.ProtoReflect.Descriptor instead.
func (*UploadContentRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{18}
}

func (x *UploadContentRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UploadContentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadContentRequest) GetContentType() common.ContentType {
	if x != nil {
		return x.ContentType
	}
	return common.ContentType(0)
}

func (x *UploadContentRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

// コンテンツアップロードレスポンスを表します。
type UploadContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentId int64  `protobuf:"varint,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // コンテンツID。
	UploadUrl string `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`  // コンテンツをアップロードするURL。
}

func (x *UploadContentResponse) Reset() {
	*x = UploadContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadContentResponse) ProtoMessage() {}

func (x *UploadContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadContentResponse.ProtoReflect.Descriptor instead.
func (*UploadContentResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{19}
}

func (x *UploadContentResponse) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *UploadContentResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

// コンテンツアップロード終了リクエストを表します。
type FinishUploadContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    int64  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // チームID。
	ContentId int64  `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // コンテンツID。
	Md5       []byte `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`                               // MD5ハッシュ。
}

func (x *FinishUploadContentRequest) Reset() {
	*x = FinishUploadContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishUploadContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishUploadContentRequest) ProtoMessage() {}

func (x *FinishUploadContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishUploadContentRequest.ProtoReflect.Descriptor instead.
func (*FinishUploadContentRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{20}
}

func (x *FinishUploadContentRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *FinishUploadContentRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *FinishUploadContentRequest) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

// コンテンツアップロード終了レスポンスを表します。
type FinishUploadContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *common.Content `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` // コンテンツ。
}

func (x *FinishUploadContentResponse) Reset() {
	*x = FinishUploadContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishUploadContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishUploadContentResponse) ProtoMessage() {}

func (x *FinishUploadContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishUploadContentResponse.ProtoReflect.Descriptor instead.
func (*FinishUploadContentResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{21}
}

func (x *FinishUploadContentResponse) GetContent() *common.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

// コンテンツダウンロード取得リクエストを表します。
type DownloadContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // チームID。
	ContentId int64 `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // コンテンツID。
}

func (x *DownloadContentRequest) Reset() {
	*x = DownloadContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadContentRequest) ProtoMessage() {}

func (x *DownloadContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadContentRequest.ProtoReflect.Descriptor instead.
func (*DownloadContentRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{22}
}

func (x *DownloadContentRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *DownloadContentRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

// コンテンツダウンロード取得レスポンスを表します。
type DownloadContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content     *common.Content `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`                            // コンテンツ。
	DownloadUrl string          `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"` // ダウンロードURL。
}

func (x *DownloadContentResponse) Reset() {
	*x = DownloadContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadContentResponse) ProtoMessage() {}

func (x *DownloadContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadContentResponse.ProtoReflect.Descriptor instead.
func (*DownloadContentResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{23}
}

func (x *DownloadContentResponse) GetContent() *common.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *DownloadContentResponse) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

// コンテンツ更新リクエストを表します。
type UpdateContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    int64  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // チームID。
	ContentId int64  `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // コンテンツID。
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                             // コンテンツ名。
}

func (x *UpdateContentRequest) Reset() {
	*x = UpdateContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContentRequest) ProtoMessage() {}

func (x *UpdateContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContentRequest.ProtoReflect.Descriptor instead.
func (*UpdateContentRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateContentRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UpdateContentRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *UpdateContentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// コンテンツ更新レスポンスを表します。
type UpdateContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *common.Content `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` // コンテンツ。
}

func (x *UpdateContentResponse) Reset() {
	*x = UpdateContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContentResponse) ProtoMessage() {}

func (x *UpdateContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContentResponse.ProtoReflect.Descriptor instead.
func (*UpdateContentResponse) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateContentResponse) GetContent() *common.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

// コンテンツ削除リクエストを表します。
type DeleteContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // チームID。
	ContentId int64 `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // コンテンツID。
}

func (x *DeleteContentRequest) Reset() {
	*x = DeleteContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_content_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContentRequest) ProtoMessage() {}

func (x *DeleteContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_content_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContentRequest.ProtoReflect.Descriptor instead.
func (*DeleteContentRequest) Descriptor() ([]byte, []int) {
	return file_core_content_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteContentRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *DeleteContentRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

var File_core_content_proto protoreflect.FileDescriptor

var file_core_content_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x31, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x22, 0x56, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x56, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x80, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x1f,
	0x4d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x6d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x92,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x22, 0x66, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x4b, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x22, 0x62, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4e,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xe5,
	0x0a, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x5a, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64,
	0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x28, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70, 0x69, 0x72, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x64, 0x4a,
	0x50, 0x2f, 0x61, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_content_proto_rawDescOnce sync.Once
	file_core_content_proto_rawDescData = file_core_content_proto_rawDesc
)

func file_core_content_proto_rawDescGZIP() []byte {
	file_core_content_proto_rawDescOnce.Do(func() {
		file_core_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_content_proto_rawDescData)
	})
	return file_core_content_proto_rawDescData
}

var file_core_content_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_core_content_proto_goTypes = []interface{}{
	(*GetContentListsRequest)(nil),              // 0: at.core.GetContentListsRequest
	(*GetContentListsResponse)(nil),             // 1: at.core.GetContentListsResponse
	(*GetContentListRequest)(nil),               // 2: at.core.GetContentListRequest
	(*GetContentListResponse)(nil),              // 3: at.core.GetContentListResponse
	(*CreateContentListRequest)(nil),            // 4: at.core.CreateContentListRequest
	(*CreateContentListResponse)(nil),           // 5: at.core.CreateContentListResponse
	(*UpdateContentListRequest)(nil),            // 6: at.core.UpdateContentListRequest
	(*UpdateContentListResponse)(nil),           // 7: at.core.UpdateContentListResponse
	(*DeleteContentListRequest)(nil),            // 8: at.core.DeleteContentListRequest
	(*AddContentToContentListRequest)(nil),      // 9: at.core.AddContentToContentListRequest
	(*RemoveContentFromContentListRequest)(nil), // 10: at.core.RemoveContentFromContentListRequest
	(*MoveContentInContentListRequest)(nil),     // 11: at.core.MoveContentInContentListRequest
	(*GetAllContentsRequest)(nil),               // 12: at.core.GetAllContentsRequest
	(*GetAllContentsResponse)(nil),              // 13: at.core.GetAllContentsResponse
	(*GetContentsRequest)(nil),                  // 14: at.core.GetContentsRequest
	(*GetContentsResponse)(nil),                 // 15: at.core.GetContentsResponse
	(*GetContentRequest)(nil),                   // 16: at.core.GetContentRequest
	(*GetContentResponse)(nil),                  // 17: at.core.GetContentResponse
	(*UploadContentRequest)(nil),                // 18: at.core.UploadContentRequest
	(*UploadContentResponse)(nil),               // 19: at.core.UploadContentResponse
	(*FinishUploadContentRequest)(nil),          // 20: at.core.FinishUploadContentRequest
	(*FinishUploadContentResponse)(nil),         // 21: at.core.FinishUploadContentResponse
	(*DownloadContentRequest)(nil),              // 22: at.core.DownloadContentRequest
	(*DownloadContentResponse)(nil),             // 23: at.core.DownloadContentResponse
	(*UpdateContentRequest)(nil),                // 24: at.core.UpdateContentRequest
	(*UpdateContentResponse)(nil),               // 25: at.core.UpdateContentResponse
	(*DeleteContentRequest)(nil),                // 26: at.core.DeleteContentRequest
	(*common.ContentList)(nil),                  // 27: at.common.ContentList
	(common.ContentType)(0),                     // 28: at.common.ContentType
	(*common.Content)(nil),                      // 29: at.common.Content
	(*emptypb.Empty)(nil),                       // 30: google.protobuf.Empty
}
var file_core_content_proto_depIdxs = []int32{
	27, // 0: at.core.GetContentListsResponse.content_lists:type_name -> at.common.ContentList
	27, // 1: at.core.GetContentListResponse.content_list:type_name -> at.common.ContentList
	27, // 2: at.core.CreateContentListResponse.content_list:type_name -> at.common.ContentList
	27, // 3: at.core.UpdateContentListResponse.content_list:type_name -> at.common.ContentList
	28, // 4: at.core.GetAllContentsRequest.content_types:type_name -> at.common.ContentType
	29, // 5: at.core.GetAllContentsResponse.contents:type_name -> at.common.Content
	28, // 6: at.core.GetContentsRequest.content_types:type_name -> at.common.ContentType
	29, // 7: at.core.GetContentsResponse.contents:type_name -> at.common.Content
	29, // 8: at.core.GetContentResponse.content:type_name -> at.common.Content
	28, // 9: at.core.UploadContentRequest.content_type:type_name -> at.common.ContentType
	29, // 10: at.core.FinishUploadContentResponse.content:type_name -> at.common.Content
	29, // 11: at.core.DownloadContentResponse.content:type_name -> at.common.Content
	29, // 12: at.core.UpdateContentResponse.content:type_name -> at.common.Content
	0,  // 13: at.core.ContentService.GetContentLists:input_type -> at.core.GetContentListsRequest
	2,  // 14: at.core.ContentService.GetContentList:input_type -> at.core.GetContentListRequest
	4,  // 15: at.core.ContentService.CreateContentList:input_type -> at.core.CreateContentListRequest
	6,  // 16: at.core.ContentService.UpdateContentList:input_type -> at.core.UpdateContentListRequest
	8,  // 17: at.core.ContentService.DeleteContentList:input_type -> at.core.DeleteContentListRequest
	9,  // 18: at.core.ContentService.AddContentToContentList:input_type -> at.core.AddContentToContentListRequest
	10, // 19: at.core.ContentService.RemoveContentFromContentList:input_type -> at.core.RemoveContentFromContentListRequest
	11, // 20: at.core.ContentService.MoveContentInContentList:input_type -> at.core.MoveContentInContentListRequest
	12, // 21: at.core.ContentService.GetAllContents:input_type -> at.core.GetAllContentsRequest
	14, // 22: at.core.ContentService.GetContents:input_type -> at.core.GetContentsRequest
	16, // 23: at.core.ContentService.GetContent:input_type -> at.core.GetContentRequest
	18, // 24: at.core.ContentService.UploadContent:input_type -> at.core.UploadContentRequest
	20, // 25: at.core.ContentService.FinishUploadContent:input_type -> at.core.FinishUploadContentRequest
	22, // 26: at.core.ContentService.DownloadContent:input_type -> at.core.DownloadContentRequest
	24, // 27: at.core.ContentService.UpdateContent:input_type -> at.core.UpdateContentRequest
	26, // 28: at.core.ContentService.DeleteContent:input_type -> at.core.DeleteContentRequest
	1,  // 29: at.core.ContentService.GetContentLists:output_type -> at.core.GetContentListsResponse
	3,  // 30: at.core.ContentService.GetContentList:output_type -> at.core.GetContentListResponse
	5,  // 31: at.core.ContentService.CreateContentList:output_type -> at.core.CreateContentListResponse
	7,  // 32: at.core.ContentService.UpdateContentList:output_type -> at.core.UpdateContentListResponse
	30, // 33: at.core.ContentService.DeleteContentList:output_type -> google.protobuf.Empty
	30, // 34: at.core.ContentService.AddContentToContentList:output_type -> google.protobuf.Empty
	30, // 35: at.core.ContentService.RemoveContentFromContentList:output_type -> google.protobuf.Empty
	30, // 36: at.core.ContentService.MoveContentInContentList:output_type -> google.protobuf.Empty
	13, // 37: at.core.ContentService.GetAllContents:output_type -> at.core.GetAllContentsResponse
	15, // 38: at.core.ContentService.GetContents:output_type -> at.core.GetContentsResponse
	17, // 39: at.core.ContentService.GetContent:output_type -> at.core.GetContentResponse
	19, // 40: at.core.ContentService.UploadContent:output_type -> at.core.UploadContentResponse
	21, // 41: at.core.ContentService.FinishUploadContent:output_type -> at.core.FinishUploadContentResponse
	23, // 42: at.core.ContentService.DownloadContent:output_type -> at.core.DownloadContentResponse
	25, // 43: at.core.ContentService.UpdateContent:output_type -> at.core.UpdateContentResponse
	30, // 44: at.core.ContentService.DeleteContent:output_type -> google.protobuf.Empty
	29, // [29:45] is the sub-list for method output_type
	13, // [13:29] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_core_content_proto_init() }
func file_core_content_proto_init() {
	if File_core_content_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentListsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentListsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContentToContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveContentFromContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveContentInContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishUploadContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishUploadContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_content_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_content_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_content_proto_goTypes,
		DependencyIndexes: file_core_content_proto_depIdxs,
		MessageInfos:      file_core_content_proto_msgTypes,
	}.Build()
	File_core_content_proto = out.File
	file_core_content_proto_rawDesc = nil
	file_core_content_proto_goTypes = nil
	file_core_content_proto_depIdxs = nil
}
