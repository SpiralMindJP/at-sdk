//
// Authorization は認可トークンを発行する API を提供します。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: core/authorization.proto

package core

import (
	common "github.com/SpiralMindJP/at-sdk/go/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
// Web リフレッシュトークンを発行するためのリクエストを表します。
type IssueWebRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId     int64             `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                                       // チームID。
	DeviceId   int64             `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                                 // デバイスID。
	DeviceType common.DeviceType `protobuf:"varint,3,opt,name=device_type,json=deviceType,proto3,enum=at.common.DeviceType" json:"device_type,omitempty"` // デバイスタイプ。
}

func (x *IssueWebRefreshTokenRequest) Reset() {
	*x = IssueWebRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_authorization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueWebRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueWebRefreshTokenRequest) ProtoMessage() {}

func (x *IssueWebRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_authorization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueWebRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*IssueWebRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_core_authorization_proto_rawDescGZIP(), []int{0}
}

func (x *IssueWebRefreshTokenRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *IssueWebRefreshTokenRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *IssueWebRefreshTokenRequest) GetDeviceType() common.DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return common.DeviceType(0)
}

//
// Web リフレッシュトークンを発行したレスポンスを表します。
type IssueWebRefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *common.Token `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *IssueWebRefreshTokenResponse) Reset() {
	*x = IssueWebRefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_authorization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueWebRefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueWebRefreshTokenResponse) ProtoMessage() {}

func (x *IssueWebRefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_authorization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueWebRefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*IssueWebRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_core_authorization_proto_rawDescGZIP(), []int{1}
}

func (x *IssueWebRefreshTokenResponse) GetToken() *common.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

//
// Web リフレッシュトークンの有効性を検証するためのリクエストを表します。
type ValidateWebRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // Web リフレッシュトークン。
}

func (x *ValidateWebRefreshTokenRequest) Reset() {
	*x = ValidateWebRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_authorization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateWebRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateWebRefreshTokenRequest) ProtoMessage() {}

func (x *ValidateWebRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_authorization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateWebRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*ValidateWebRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_core_authorization_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateWebRefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

//
// Web アクセストークンを発行するためのリクエストを表します。
type IssueWebAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // Web リフレッシュトークン。
}

func (x *IssueWebAccessTokenRequest) Reset() {
	*x = IssueWebAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_authorization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueWebAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueWebAccessTokenRequest) ProtoMessage() {}

func (x *IssueWebAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_authorization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueWebAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*IssueWebAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_core_authorization_proto_rawDescGZIP(), []int{3}
}

func (x *IssueWebAccessTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

//
// Web アクセストークンを発行したレスポンスを表します。
type IssueWebAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *common.Token `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *IssueWebAccessTokenResponse) Reset() {
	*x = IssueWebAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_authorization_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueWebAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueWebAccessTokenResponse) ProtoMessage() {}

func (x *IssueWebAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_authorization_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueWebAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*IssueWebAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_core_authorization_proto_rawDescGZIP(), []int{4}
}

func (x *IssueWebAccessTokenResponse) GetToken() *common.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

//
// WebRTC アクセストークンを発行するためのリクエストを表します。
type IssueWebRTCAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // Web リフレッシュトークン。
	RoomId       int64  `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                  // ルームID。
}

func (x *IssueWebRTCAccessTokenRequest) Reset() {
	*x = IssueWebRTCAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_authorization_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueWebRTCAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueWebRTCAccessTokenRequest) ProtoMessage() {}

func (x *IssueWebRTCAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_authorization_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueWebRTCAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*IssueWebRTCAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_core_authorization_proto_rawDescGZIP(), []int{5}
}

func (x *IssueWebRTCAccessTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *IssueWebRTCAccessTokenRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

//
// WebRTC アクセストークンを発行したレスポンスを表します。
type IssueWebRTCAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *common.Token `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *IssueWebRTCAccessTokenResponse) Reset() {
	*x = IssueWebRTCAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_authorization_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueWebRTCAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueWebRTCAccessTokenResponse) ProtoMessage() {}

func (x *IssueWebRTCAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_authorization_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueWebRTCAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*IssueWebRTCAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_core_authorization_proto_rawDescGZIP(), []int{6}
}

func (x *IssueWebRTCAccessTokenResponse) GetToken() *common.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

var File_core_authorization_proto protoreflect.FileDescriptor

var file_core_authorization_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x1c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x45, 0x0a, 0x1e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x41, 0x0a, 0x1a, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x45, 0x0a, 0x1b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65,
	0x62, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5d, 0x0a, 0x1d,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1e, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xa4, 0x03, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63,
	0x0a, 0x14, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27,
	0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x60, 0x0a, 0x13, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x69, 0x0a, 0x16, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52, 0x54,
	0x43, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70, 0x69, 0x72, 0x61,
	0x6c, 0x4d, 0x69, 0x6e, 0x64, 0x4a, 0x50, 0x2f, 0x61, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_core_authorization_proto_rawDescOnce sync.Once
	file_core_authorization_proto_rawDescData = file_core_authorization_proto_rawDesc
)

func file_core_authorization_proto_rawDescGZIP() []byte {
	file_core_authorization_proto_rawDescOnce.Do(func() {
		file_core_authorization_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_authorization_proto_rawDescData)
	})
	return file_core_authorization_proto_rawDescData
}

var file_core_authorization_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_core_authorization_proto_goTypes = []interface{}{
	(*IssueWebRefreshTokenRequest)(nil),    // 0: at.core.IssueWebRefreshTokenRequest
	(*IssueWebRefreshTokenResponse)(nil),   // 1: at.core.IssueWebRefreshTokenResponse
	(*ValidateWebRefreshTokenRequest)(nil), // 2: at.core.ValidateWebRefreshTokenRequest
	(*IssueWebAccessTokenRequest)(nil),     // 3: at.core.IssueWebAccessTokenRequest
	(*IssueWebAccessTokenResponse)(nil),    // 4: at.core.IssueWebAccessTokenResponse
	(*IssueWebRTCAccessTokenRequest)(nil),  // 5: at.core.IssueWebRTCAccessTokenRequest
	(*IssueWebRTCAccessTokenResponse)(nil), // 6: at.core.IssueWebRTCAccessTokenResponse
	(common.DeviceType)(0),                 // 7: at.common.DeviceType
	(*common.Token)(nil),                   // 8: at.common.Token
	(*emptypb.Empty)(nil),                  // 9: google.protobuf.Empty
}
var file_core_authorization_proto_depIdxs = []int32{
	7, // 0: at.core.IssueWebRefreshTokenRequest.device_type:type_name -> at.common.DeviceType
	8, // 1: at.core.IssueWebRefreshTokenResponse.token:type_name -> at.common.Token
	8, // 2: at.core.IssueWebAccessTokenResponse.token:type_name -> at.common.Token
	8, // 3: at.core.IssueWebRTCAccessTokenResponse.token:type_name -> at.common.Token
	0, // 4: at.core.AuthorizationService.IssueWebRefreshToken:input_type -> at.core.IssueWebRefreshTokenRequest
	2, // 5: at.core.AuthorizationService.ValidateWebRefreshToken:input_type -> at.core.ValidateWebRefreshTokenRequest
	3, // 6: at.core.AuthorizationService.IssueWebAccessToken:input_type -> at.core.IssueWebAccessTokenRequest
	5, // 7: at.core.AuthorizationService.IssueWebRTCAccessToken:input_type -> at.core.IssueWebRTCAccessTokenRequest
	1, // 8: at.core.AuthorizationService.IssueWebRefreshToken:output_type -> at.core.IssueWebRefreshTokenResponse
	9, // 9: at.core.AuthorizationService.ValidateWebRefreshToken:output_type -> google.protobuf.Empty
	4, // 10: at.core.AuthorizationService.IssueWebAccessToken:output_type -> at.core.IssueWebAccessTokenResponse
	6, // 11: at.core.AuthorizationService.IssueWebRTCAccessToken:output_type -> at.core.IssueWebRTCAccessTokenResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_core_authorization_proto_init() }
func file_core_authorization_proto_init() {
	if File_core_authorization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_authorization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueWebRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_authorization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueWebRefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_authorization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateWebRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_authorization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueWebAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_authorization_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueWebAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_authorization_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueWebRTCAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_authorization_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueWebRTCAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_authorization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_authorization_proto_goTypes,
		DependencyIndexes: file_core_authorization_proto_depIdxs,
		MessageInfos:      file_core_authorization_proto_msgTypes,
	}.Build()
	File_core_authorization_proto = out.File
	file_core_authorization_proto_rawDesc = nil
	file_core_authorization_proto_goTypes = nil
	file_core_authorization_proto_depIdxs = nil
}
