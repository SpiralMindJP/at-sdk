/*
 * Team はチームに関する情報を操作します。
 */
syntax = "proto3";

option go_package = "github.com/SpiralMindJP/at-sdk/go/pb/core";

package at.core;

import "common/common.proto";
import "google/protobuf/empty.proto";

/*
 * チームリスト取得リクエストを表します。
 */
message GetTeamsRequest {
}

/*
 * チームリスト取得レスポンスを表します。
 */
message GetTeamsResponse {
  repeated at.common.Team teams = 1; // チームのリスト。
}

/*
 * チーム取得リクエストを表します。
 */
message GetTeamRequest {
  int64 team_id = 1; // チームID。
}

/*
 * チーム取得リクエストを表します。
 */
message GetTeamResponse {
  at.common.Team team = 1; // チーム。
}

/*
 * チーム作成リクエストを表します。
 */
message CreateTeamRequest {
  string name = 1; // チーム名。
}

/*
 * チーム作成レスポンスを表します。
 */
message CreateTeamResponse {
  at.common.Team team = 1; // チーム。
}

/*
 * チーム更新リクエストを表します。
 */
message UpdateTeamRequest {
  int64  team_id = 1; // チームID。
  string name    = 2; // チーム名。
}

/*
 * チーム更新レスポンスを表します。
 */
message UpdateTeamResponse {
  at.common.Team team = 1; // チーム。
}

/*
 * チーム削除リクエストを表します。
 */
message DeleteTeamRequest {
  int64  team_id = 1; // チームID。
}

/*
 * チームを操作するAPIを提供します。
 */
service TeamService {
  // チームのリストを取得します。
  // GetTeamsRequest を渡します。
  // チーム情報のリストが設定された GetTeamsResponse が返ります。
  rpc GetTeams(GetTeamsRequest) returns (GetTeamsResponse);

  // チームを取得します。
  // 取得するチームのチームIDを指定した GetTeamRequest を渡します。
  // チームが存在する場合、チーム情報が設定された GetTeamResponse が返ります。
  rpc GetTeam(GetTeamRequest) returns (GetTeamResponse);

  // 新しくチームを作成します。
  // チーム名を指定した CreateTeamRequest を渡します。
  // チームの作成に成功すると、作成されたチーム情報が設定さた CreateTeamResponse が返ります。
  rpc CreateTeam(CreateTeamRequest) returns (CreateTeamResponse);

  // チームを更新します。
  // 更新するチームのチームIDと、新しいチーム名を指定した UpdateTeamRequest を渡します。
  // チームの更新に成功すると、更新されたチーム情報が設定された UpdateTeamResponse が返ります。
  rpc UpdateTeam(UpdateTeamRequest) returns (UpdateTeamResponse);

  // チームを削除します。
  // 削除するチームのチームIDを指定した DeleteTeamRequest を渡します。
  rpc DeleteTeam(DeleteTeamRequest) returns (google.protobuf.Empty);
}
